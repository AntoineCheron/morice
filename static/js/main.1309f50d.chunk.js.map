{"version":3,"sources":["model/technology.ts","components/header/index.tsx","components/kind-of-technologies-selector/toggle.tsx","components/kind-of-technologies-selector/index.tsx","services/technology.ts","components/content/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["TechnologyTypesEnum","Header","Layout","AppHeader","react_default","a","createElement","Toggle","_ref","isSelected","label","kinds","img","onSelect","onUnselect","layout","className","onClick","src","KindOfTechnologiesSelector","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selectedKinds","_this2","Fragment","row","col","span","gutter","map","i","types","key","kind_of_technologies_selector_toggle","bind","offset","es_button","type","onSave","icon","_this3","kind","indexOf","setState","concat","filter","React","Component","classifiedKindOfTechnologies","INTERFACE_DESCRIPTION_LANGUAGE","DATA_INTERCHANGE_FORMAT","DATA_INTERCHANGE_FORMAT_WITH_RDF_IDL","IMPLEMENTATION_FRAMEWORKS","Content","_technologies","defineProperty","name","uri","checkedCriteria","AppContent","kind_of_technologies_selector","alert","join","App","header","content","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1309f50d.chunk.js","sourcesContent":["export type ComparedTechnology = {\n  name: string,\n  uri?: string,\n  checkedCriteria: string[]\n}\n\nexport enum TechnologyTypesEnum {\n  INTERFACE_DESCRIPTION_LANGUAGE = 'InterfaceDescriptionLanguages',\n  DATA_INTERCHANGE_FORMAT = 'DataInterchangeFormats',\n  DATA_INTERCHANGE_FORMAT_WITH_RDF_IDL = 'ExtensibleDataInterchangeFormatsWithRdfIdl',\n  IMPLEMENTATION_FRAMEWORKS = 'ImplementationFrameworks'\n}\n\nexport type TechnologyType = {\n  label: string,\n  img: string,\n  types: TechnologyTypesEnum[]\n};\n\nexport type Technologies = { [type: string]: ComparedTechnology[] }\n","import React, { SFC } from 'react';\n\nimport { Layout } from 'antd';\nconst { Header } = Layout;\n\nconst AppHeader: SFC = () => (\n  <Header>\n    <h4>This is the header</h4>\n  </Header>\n)\n\nexport default AppHeader;","import React, { SFC } from 'react';\nimport { Layout } from 'antd';\n\nimport { TechnologyTypesEnum } from '../../model/technology';\n\nimport './toggle.css';\n\ntype Props = {\n  isSelected: boolean,\n  label: string,\n  kinds: TechnologyTypesEnum[],\n  img: string,\n  onSelect: (kinds: TechnologyTypesEnum[]) => void,\n  onUnselect: (kinds: TechnologyTypesEnum[]) => void\n}\n\nconst Toggle: SFC<Props> = ({ isSelected, label, kinds, img, onSelect, onUnselect }) => (\n  <Layout\n    className='center l-high-padding-top is-clickable'\n    onClick={ () => isSelected ? onUnselect(kinds) : onSelect(kinds) }  \n  >\n    <div className={ isSelected ? '' : 'opacity-lighter' }>\n      <div className='technology-icon-container is-centered'>\n        <img className='img-eighty-percent' src={img} />\n      </div>\n      <h3 className={ isSelected ? 'text-bold text-primary' : '' }>{label}</h3>\n    </div>\n  </Layout>\n)\n\nexport default Toggle;","import React from 'react';\nimport { Button, Icon, Row, Col } from 'antd';\n\nimport { TechnologyType, TechnologyTypesEnum } from '../../model/technology';\nimport Toggle from './toggle';\n\ntype Props = { kinds: TechnologyType[], onSave?: (selectedKinds: TechnologyTypesEnum[]) => void };\ntype State = { selectedKinds: TechnologyTypesEnum[] };\n\nclass KindOfTechnologiesSelector extends React.Component<Props, State> {\n\n  constructor(props: Props) {\n    super(props)\n    this.state = { selectedKinds: [] };\n  }\n\n  public render(): JSX.Element {\n    return (\n      <>\n        <Row>\n          <Col span={24}>\n            <h1>1. Kind of technologies</h1>\n            <h4>Please select the kind of technologies you are looking for.</h4>\n          </Col>\n        </Row>\n        <Row gutter={24}>\n          {\n            this.props.kinds.map(({ label, img, types }, i) => (\n              <Col span={8} key={i}>\n                <Toggle\n                  isSelected={this.isSelected(types)}\n                  label={label}\n                  kinds={types}\n                  img={img}\n                  onSelect={this.onSelect.bind(this)}\n                  onUnselect={this.onUnselect.bind(this)}\n                />\n              </Col>\n            ))\n          }\n        </Row>\n        <Row>\n          <Col span={8} offset={16} className='text-right'>\n            <Button type=\"primary\" onClick={this.onSave.bind(this)} >\n              Next <Icon type=\"right\" />\n            </Button>\n          </Col>\n        </Row>\n      </>\n    )\n  }\n\n  private onSave(): void {\n    if (this.props.onSave) {\n      this.props.onSave(this.state.selectedKinds)\n    }\n  }\n\n  private isSelected(kinds: TechnologyTypesEnum[]): boolean {\n    return kinds.map(kind => this.state.selectedKinds.indexOf(kind) > -1)\n      .indexOf(false) === -1\n  }\n\n  private onSelect(kinds: TechnologyTypesEnum[]): void {\n    this.setState((state) => {\n      return { selectedKinds: state.selectedKinds.concat(kinds) };\n    });\n  }\n\n  private onUnselect(kinds: TechnologyTypesEnum[]): void {\n    this.setState((state) => {\n      return { selectedKinds: state.selectedKinds\n        .filter((kind) => kinds.indexOf(kind) < 0)\n      };\n    });\n  }\n\n}\n\nexport default KindOfTechnologiesSelector;\n","import { ComparedTechnology, TechnologyTypesEnum, Technologies, TechnologyType } from '../model/technology'\n\nexport function getTechnologies(type: TechnologyTypesEnum): ComparedTechnology[] {\n  return technologies[type]\n}\n\nexport const classifiedKindOfTechnologies: TechnologyType[] = [\n  {\n    label: 'Interface Description Languages',\n    types: [TechnologyTypesEnum.INTERFACE_DESCRIPTION_LANGUAGE],\n    img: '/technologies-icons/idl.svg'\n  }, {\n    label: 'Data Interchange Formats',\n    types: [TechnologyTypesEnum.DATA_INTERCHANGE_FORMAT, TechnologyTypesEnum.DATA_INTERCHANGE_FORMAT_WITH_RDF_IDL],\n    img: '/technologies-icons/dif.svg'\n  }, {\n    label: 'Frameworks',\n    types: [TechnologyTypesEnum.IMPLEMENTATION_FRAMEWORKS],\n    img: '/technologies-icons/framework.svg'\n  }\n]\n\nconst technologies: Technologies = {\n  [TechnologyTypesEnum.INTERFACE_DESCRIPTION_LANGUAGE]: [\n    { name: 'RAPIDO - CRUD Option', uri: 'http://example.com', checkedCriteria: [ 'MR', 'MRO', 'EAR', 'LT', 'STA'] },\n    { name: 'RAPIDO - Hypermedia option', uri: 'http://example.com', checkedCriteria: [ 'MR', 'MRO', 'EAR', 'LT', 'HL', 'HYP', 'CL', 'FSM', 'STA' ] },\n    { name: 'Modeling RESTful Applications', uri: 'http://example.com', checkedCriteria: [ 'MT', 'MR', 'OTO', 'MRA', 'MRO', 'DR', 'OSD', 'LT', 'HL', 'HYP', 'COA', 'CL', 'FSM', 'RS', 'STA'] },\n    { name: 'Formal modeling of RESTful APIs using finite state machines', uri: 'http://example.com', checkedCriteria: [ 'MT', 'MR', 'HL', 'HYP', 'FSM', 'STA'] },\n    { name: 'A model-driven approach for REST compliant service', uri: 'http://example.com', checkedCriteria: [ 'MT', 'SC', 'MR', 'OTO', 'MRA', 'MRO', 'DR', 'OSD', 'HL', 'HYP', 'CL', 'STA'] },\n    { name: 'Hydra', uri: 'http://example.com', checkedCriteria: [ 'MR', 'OTO', 'MRA', 'MRO', 'DR', 'OSD', 'LT', 'RUN', 'PS', 'HL', 'HYP', 'TI', 'ERR', 'SD', 'RDF', 'CL', 'SCL', 'STA' ] },\n    { name: 'Atom Publishing Protocol + Atom Syndication Format', uri: 'http://example.com', checkedCriteria: [ 'MT', 'MR', 'MRA', 'EAR', 'DR', 'OSD', 'LT', 'RUN', 'HL', 'TI', 'CL', 'SCL', 'STA' ] },\n    { name: 'WSDL + SAWSDL', uri: 'http://example.com', checkedCriteria: [ 'MT', 'MR', 'OTO', 'MRA', 'MRO', 'DR', 'OSD', 'LT', 'MC', 'SD', 'RDF', 'STA' ] },\n    { name: 'WADL', uri: 'http://example.com', checkedCriteria: [ 'MT', 'MR', 'OTO', 'MRA', 'MRO', 'DR', 'OSD', 'LT', 'MC', 'ERR', 'STA' ] },\n    { name: 'OpenApi/Swagger', uri: 'http://example.com', checkedCriteria: [ 'MT', 'SC', 'MR', 'OTO', 'MRA', 'MRO', 'DR', 'OSD', 'LT', 'HL', 'HYP', 'TI', 'AUT', 'SLA', 'ERR', 'CL', 'STA' ] },\n    { name: 'API Blueprint + MSON', uri: 'http://example.com', checkedCriteria: [ 'MT', 'SC', 'MR', 'OTO', 'MRA', 'MRO', 'LT', 'MC', 'TI', 'ERR', 'CL', 'SCL', 'STA' ] },\n    { name: 'hREST + microWSMO', uri: 'http://example.com', checkedCriteria: [ 'OTO', 'MRO', 'DR', 'OSD', 'LT', 'SD', 'RDF', 'TAR', 'STA' ] },\n    { name: 'RESTdesc', uri: 'http://example.com', checkedCriteria: [ 'MT', 'SC', 'MR', 'OTO', 'MRO', 'DR', 'OSD', 'LT', 'RUN', 'SD', 'RDF', 'CL', 'SCL', 'TAR' ] },\n    { name: 'RADL', uri: 'http://example.com', checkedCriteria: [ 'MT', 'SC', 'MR', 'OTO', 'MRA', 'MRO', 'DR', 'OSD', 'LT', 'RUN', 'HL', 'HYP', 'AUT', 'RDF', 'CL', 'SCL', 'FSM', 'STA' ] },\n    { name: 'RAML', uri: 'http://example.com', checkedCriteria: [ 'MT', 'MR', 'OTO', 'MRA', 'MRO', 'DR', 'OSD', 'LT', 'MC', 'TI', 'AUT', 'SLA', 'ERR', 'STA', 'INC' ] },\n    { name: 'I/O Docs', uri: 'http://example.com', checkedCriteria: [ 'MT', 'MR', 'OTO', 'MRA', 'MRO', 'LT', 'TAR', 'STA' ] }\n  ],\n  [TechnologyTypesEnum.DATA_INTERCHANGE_FORMAT]: [\n    { name: 'JSON', uri: 'http://example.com', checkedCriteria: [ 'JSON', 'NOM', 'HF', 'ECD' ] },\n    { name: 'HAL', uri: 'http://example.com', checkedCriteria: [ 'LT', 'CR', 'HL', 'CL', 'SCL', 'JSON', 'NOM', 'HF', 'CUR', 'ECD', 'PX' ] },\n    { name: 'Collection+JSON', uri: 'http://example.com', checkedCriteria: [ 'LT', 'DR', 'HL', 'ERR', 'CL', 'SCL', 'JSON', 'HF', 'ECD' ] },\n    { name: 'Siren', uri: 'http://example.com', checkedCriteria: [ 'LT', 'CR', 'CU', 'CM', 'DR', 'OSD', 'HL', 'HYP', 'CL', 'JSON', 'HF', 'ECD', 'TAR' ] },\n    { name: 'Uber', uri: 'http://example.com', checkedCriteria: [ 'LT', 'CR', 'CU', 'CM', 'HL', 'HYP', 'ERR', 'CL', 'JSON', 'HF', 'ECD' ] },\n    { name: 'Mason', uri: 'http://example.com', checkedCriteria: [ 'LT', 'CR', 'CU', 'CM', 'DR', 'OSD', 'HL', 'HYP', 'SLA', 'ERR', 'CL', 'SCL', 'JSON', 'NOM', 'HF', 'CUR', 'ECD', 'PX', 'SML', 'TAR' ] },\n    { name: 'Json:Api', uri: 'http://example.com', checkedCriteria: [ 'PS', 'HL', 'SLA', 'ERR', 'CL', 'JSON', 'HF', 'ECD' ] },\n    { name: 'Atom Syndication Format', uri: 'http://example.com', checkedCriteria: [ 'CR', 'HL', 'CL', 'ECD', 'MF' ] },\n    { name: 'Turtle', uri: 'http://example.com', checkedCriteria: [ 'HL', 'RDF', 'HF', 'PX' ] },\n    { name: 'RDF XML', uri: 'http://example.com', checkedCriteria: [ 'HL', 'RDF', 'HF' ] },\n    { name: 'Odata JSON Format', uri: 'http://example.com', checkedCriteria: [ 'LT', 'CR', 'PS', 'HL', 'ERR', 'CL', 'JSON', 'HF', 'ECD', 'SML', 'MF' ] },\n    { name: 'JSON-LD', uri: 'http://example.com', checkedCriteria: [ 'RDF', 'CL', 'SCL', 'JSON', 'NOM', 'CUR', 'ECD', 'PX' ] }\n  ],\n  [TechnologyTypesEnum.DATA_INTERCHANGE_FORMAT_WITH_RDF_IDL]: [\n    { name: 'JSON-LD + Hydra', uri: 'http://example.com', checkedCriteria: [ 'LT', 'CM', 'DR', 'OSD', 'PS', 'HL', 'HYP', 'ERR', 'RDF', 'CL', 'SCL', 'JSON', 'NOM', 'CUR', 'ECD', 'PX' ] },\n    { name: 'JSON-LD + Hydra + HTTP RDF + SHACL', uri: 'http://example.com', checkedCriteria: [ 'LT', 'CR', 'CU', 'CM', 'DR', 'OSD', 'PS', 'HL', 'HYP', 'MC', 'ERR', 'RDF', 'CL', 'SCL', 'JSON', 'NOM', 'CUR', 'ECD', 'PX', 'MF' ] }\n  ],\n  [TechnologyTypesEnum.IMPLEMENTATION_FRAMEWORKS]: [\n    { name: 'Restfulie (ruby)', uri: 'http://example.com', checkedCriteria: [ 'SC', 'OTO', 'CN', 'EXT', 'EAR', 'LT', 'HL', 'LNM', 'CL', 'FSM', 'LGEN' ] },\n    { name: 'Restfulie (java)', uri: 'http://example.com', checkedCriteria: [ 'SC', 'OTO', 'MRO', 'CN', 'LT', 'HL', 'LNM', 'CL', 'FSM', 'LGEN' ] },\n    { name: 'Restfulie (.NET)', uri: 'http://example.com', checkedCriteria: [ 'SC', 'OTO', 'MRO', 'CN', 'EXT', 'LT', 'HL', 'LNM', 'CL', 'FSM', 'LGEN' ] },\n    { name: 'API Platform (php)', uri: 'http://example.com', checkedCriteria: [ 'SC', 'OTO', 'MRO', 'CN', 'EXT', 'DR', 'OSD', 'LT', 'PS', 'HL', 'HYP', 'LNM', 'AUT', 'SLA', 'ERR', 'SD', 'DC', 'RDF', 'CL', 'SCL', 'LGEN' ] },\n    { name: 'Spring HATEOAS', uri: 'http://example.com', checkedCriteria: [ 'SC', 'OTO', 'MRO', 'CN', 'EXT', 'DR', 'OSD', 'LT', 'HL', 'ERR', 'CL', 'LGEN' ] },\n    { name: 'JAX-RS 2.0', uri: 'http://example.com', checkedCriteria: [ 'SC', 'OTO', 'MRO', 'CN', 'EXT', 'LT', 'HL', 'HYP', 'CL', 'LGEN' ] },\n    { name: 'A framework for the semantic description of restful web apis', uri: 'http://example.com', checkedCriteria: [ 'SC', 'OTO', 'MRO', 'CN', 'EXT', 'DR', 'OSD', 'LT', 'PS', 'HL', 'HYP', 'SD', 'RDF', 'CL', 'SCL', 'LGEN' ] },\n    { name: 'Ripozo', uri: 'http://example.com', checkedCriteria: [ 'SC', 'OTO', 'MRO', 'CN', 'EXT', 'LT', 'HL', 'HYP', 'CL', 'LGEN' ] }\n  ]\n}\n","import React from 'react';\n\nimport { Layout } from 'antd';\n\nimport KindOfTechnologiesSelector from '../kind-of-technologies-selector'\nimport { classifiedKindOfTechnologies } from '../../services/technology'\n\nconst { Content } = Layout;\n\nclass AppContent extends React.Component {\n\n  public render() {\n    return (\n      <Content className='container'>\n        <KindOfTechnologiesSelector\n          kinds={classifiedKindOfTechnologies}\n          onSave={ (selectedKinds) => alert('You selected ' + selectedKinds.join(', ')) }\n        />\n      </Content>\n    );\n  }\n  \n}\n\nexport default AppContent;","import React, { Component } from 'react';\nimport { Layout } from 'antd';\n\nimport Header from './components/header'\nimport AppContent from './components/content'\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n        <Header />\n        <AppContent />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}